p
np <- map_dbl(dir('/home/roberto/Documentos/Saude TJSP', pattern = '[0-9]', full.names = TRUE),
~length(dir(.x))) %>%
rev()
p - np
all_pages <- dir('/home/roberto/Documentos/Saude TJSP', pattern = '[0-9]', full.names = TRUE) %>%
map(dir, full.names = TRUE) %>%
flatten_chr()
dados <- parse_cjsg(all_pages)
dados <- readRDS('data-raw/cjsg.rds')
# nao rodar! demora
d_result <- cjsg(s, parms = parms, path = '/home/roberto/Documentos/Saude TJSP/cjsg', max_pag = 1000L)
s <- cjsg_session()
parms <- cjsg_parms(s, livre = 'Itaú')
npags <- cjsg_npags(s, parms = parms)
npags
# nao rodar! demora
d_result <- cjsg(s, parms = parms, path = '/home/roberto/Documentos/Saude TJSP/cjsg', max_pag = 1000L)
# nao rodar! demora
d_result <- cjsg(s, path = '/home/roberto/Documentos/Saude TJSP/cjsg', max_pag = 1000L)
# nao rodar! demora
d_result <- cjsg(s, parms = parms, path = 'data-raw/cjsg', max_pag = 1000L)
s <- cjsg_session()
dados_segment = readRDS('dados_segment.rds')
write.csv(dados_segment, 'dados_segment.csv')
View(dados_segment)
View(dados_segment)
model_seg_rf = readRDS('model_segment_rf.rds')
write.csv(model_seg_rf, 'model_segment_rf.csv')
View(model_seg_rf)
p_decisao = readRDS('p_decisao.rds')
write.csv(p_decisao, 'p_decisao.csv')
View(p_decisao)
p_total = readRDS('p_total.rds')
write.csv(p_total, 'p_total.csv')
View(p_total)
View(p_total)
load(file = 'd_final.rda')
View(d_final)
View(d_final)
d_final = load(file = 'd_final.rda')
write.csv(d_final, 'd_final.csv')
write.csv(load(file = 'd_final.rda'), 'd_final.csv')
load(file = 'd_final.rda')
View(d_final)
load(file = 'd_final.rda')
write.csv(d_final, 'd_final.csv')
View(p_total)
View(p_total)
p_total = readRDS('p_total.rds')
#write.csv(p_total, 'p_total.csv')
View(p_total)
devtools::install_github("abjur/r4jurimetrics")
devtools::install_github("abjur/r4jurimetrics")
install.packages("magick")
load("d_final.rda")
d_final %>%
rename(court = orgao_julgador, decision = decisao) %>%
filter(str_detect(court, "Câmara")) %>%
mutate(tipo = if_else(str_detect(court, "Extra"), "Extraordinária", "Ordinária"),
court = str_extract(court, "[^ ]+(?= )"),
court = if_else(tipo == "Ordinária", paste0(court, "."), court)) %>%
count(court, tipo, decision) %>%
group_by(court) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
arrange(decision) %>%
mutate(court = fct_reorder(court, prop, fun = first, .desc = TRUE)) %>%
ggplot(aes(x = court, y = n, fill = fct_rev(decision))) +
geom_col(position = "fill") +
facet_wrap(~fct_rev(tipo), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
labs(x = "Câmara", y = "Proporção", fill = "Decisão") +
theme_minimal(16) +
coord_flip() +
theme(legend.position = "bottom")
load("data/d_final.rda")
load("/home/roberto/Documentos/TJSP/d_final.rda")
d_final %>%
rename(court = orgao_julgador, decision = decisao) %>%
filter(str_detect(court, "Câmara")) %>%
mutate(tipo = if_else(str_detect(court, "Extra"), "Extraordinária", "Ordinária"),
court = str_extract(court, "[^ ]+(?= )"),
court = if_else(tipo == "Ordinária", paste0(court, "."), court)) %>%
count(court, tipo, decision) %>%
group_by(court) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
arrange(decision) %>%
mutate(court = fct_reorder(court, prop, fun = first, .desc = TRUE)) %>%
ggplot(aes(x = court, y = n, fill = fct_rev(decision))) +
geom_col(position = "fill") +
facet_wrap(~fct_rev(tipo), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
labs(x = "Câmara", y = "Proporção", fill = "Decisão") +
theme_minimal(16) +
coord_flip() +
theme(legend.position = "bottom")
library(tjsp)
library(tibble)
library(magrittr)
# Códigos das câmaras criminais.
sec <- list_secoes_2inst() %>%
dplyr::filter(stringr::str_detect(secao, '[Cc]rim'),
stringr::str_detect(pai, 'CRIM')) %>%
with(cod)
# Abre uma sessão e adiciona parâmetros da pesquisa
session <- cjsg_session()
parms <- session %>%
cjsg_parms(secoes = sec, data_inicial_julg =  '2015-01-01', data_final_julg =  '2015-01-31')
# número de paginas a serem baixadas
session %>% cjsg_npags(parms)
# Download das páginas HTML (cada página corresponde a 20 decisões)
library(magrittr)
#d_result_cjpg <- session %>%
cjsg(livre = '',
data_inicial = '01/01/2014',
data_final = '31/12/2014',
min_pag = 1,
path = '/home/roberto/Documentos/cjsg/2014',
max_pag = 50)
library(tjsp)
library(tibble)
library(magrittr)
load("/home/roberto/Documentos/TJSP/d_final.rda")
d_final %>%
rename(court = orgao_julgador, decision = decisao) %>%
filter(str_detect(court, "Câmara")) %>%
mutate(tipo = if_else(str_detect(court, "Extra"), "Extraordinária", "Ordinária"),
court = str_extract(court, "[^ ]+(?= )"),
court = if_else(tipo == "Ordinária", paste0(court, "."), court)) %>%
count(court, tipo, decision) %>%
group_by(court) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
arrange(decision) %>%
mutate(court = fct_reorder(court, prop, fun = first, .desc = TRUE)) %>%
ggplot(aes(x = court, y = n, fill = fct_rev(decision))) +
geom_col(position = "fill") +
facet_wrap(~fct_rev(tipo), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
labs(x = "Câmara", y = "Proporção", fill = "Decisão") +
theme_minimal(16) +
coord_flip() +
theme(legend.position = "bottom")
load("/home/roberto/Documentos/TJSP/d_final.rda")
d_final %>%
rename(court = orgao_julgador, decision = decisao) %>%
filter(str_detect(court, "Câmara")) %>%
mutate(tipo = if_else(str_detect(court, "Extra"), "Extraordinária", "Ordinária"),
court = str_extract(court, "[^ ]+(?= )"),
court = if_else(tipo == "Ordinária", paste0(court, "."), court)) %>%
count(court, tipo, decision) %>%
group_by(court) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
arrange(decision) %>%
mutate(court = fct_reorder(court, prop, fun = first, .desc = TRUE)) %>%
ggplot(aes(x = court, y = n, fill = fct_rev(decision))) +
geom_col(position = "fill") +
facet_wrap(~fct_rev(tipo), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
labs(x = "Câmara", y = "Proporção", fill = "Decisão") +
theme_minimal(16) +
coord_flip() +
theme(legend.position = "bottom")
baixar_cjsg(livre="feminicídio",diretorio="/home/roberto/Documentos/TJSP")
library(tjsp)
baixar_cjsg(livre="feminicídio",diretorio="/home/roberto/Documentos/TJSP")
library(tidyverse)
library(esaj)
library(glue)
library(abjutils)
path <- "/home/roberto/Documentos/camaras" # onde salvar?
dir.create(path, showWarnings = FALSE)
library(esaj)
camaras <- cjsg_table("courts")
View(camaras)
camaras <- cjsg_table("courts")
camaras <- read_rds("data/cjsg_camaras.rds")
camaras <- read_rds("data/cjsg_camaras.rds")
setwd("/home/roberto/Documentos/camaras")
camaras <- cjsg_table("courts")
camaras <- read_rds("/home/roberto/Documentos/camaras/cjsg_camaras.rds")
id_camaras <- camaras %>%
filter(str_detect(court, "Câmara.*Direito Criminal$")) %>%
pull(id)
View(camaras)
peek_cjsg(query = "", courts = id_camaras,
registration_start = "2014-01-01", registration_end = "2014-01-31")
cjsg_path <- glue("{path}/cjsg")
download_cjsg(query = "", path = cjsg_path,
courts = id_camaras,
registration_start = "2014-01-01",
registration_end = "2014-01-31",
max_page = Inf, wait = 0.8)
cjsg_files <- dir(cjsg_path, full.names = TRUE, pattern = "page")
# parse
d_cjsg <- parse_cjsg(cjsg_files)
# salvando tibble parseada
write_rds(d_cjsg, glue("{path}/d_cjsg.rds"), compress = "bz2")
arqs_cjpg <- dir("/home/roberto/Documentos/camaras/cjsg", full.names = TRUE)
d_jurisprudencia <- parse_cjsg(arqs_cjpg)
d_jurisprudencia
View(d_jurisprudencia)
d_cjsg <- read_rds(glue("{path}/d_cjsg.rds"))
glimpse(d_cjsg)
View(d_cjsg)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
cposg_path <- glue("{path}/cposg")
d_cjsg %>%
filter(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
library(abjutils)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
filter(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
download_cposg(cposg_path)
download_cposg(cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
View(d_jurisprudencia)
# parse
parser <- make_parser() %>%
parse_data() %>%
parse_parts() %>%
parse_decisions()
# esse parser salva intermediários em rds
rds_path <- glue("{path}/cposg_rds")
run_parser(cposg_files, parser, path = rds_path)
rds_path <- glue("{path}/cposg_rds")
run_parser(rds_path, parser, path = rds_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(id, cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter_all(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(id, cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(id, cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter_at(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(id, cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter_at(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter_all(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter_(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter_if(!is.na(id_lawsuit)) %>%
pull(id_lawsuit) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
d_cjsg <- read_rds(glue("{path}/d_cjsg.rds"))
glimpse(d_cjsg)
View(d_jurisprudencia)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter_if(!is.na(n_processo)) %>%
pull(n_processo) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter_if(!is.na('n_processo')) %>%
pull('n_processo') %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
library(dplyr)
cposg_path <- glue("{path}/cposg")
# baixando processos individuais
d_cjsg %>%
filter_if(!is.na(n_processo)) %>%
pull(n_processo) %>%
unique() %>%
clean_id() %>%
download_cposg(cposg_path)
View(assuntos)
View(d_cjsg)
d_decisoes= read_rds('d_decisoes.rds')
d_decisoes= readRDS('d_decisoes.rds')
View(d_decisoes)
p_decisoes = readRDS('p_decisao.rds')
View(p_decisoes)
library(tidyverse)
library(esaj)
library(glue)
library(abjutils)
path <- "/home/roberto/Documentos/camaras" # onde salvar?
#dir.create(path, showWarnings = FALSE)
camaras <- read_rds("data/cjsg_camaras.rds")
camaras <- readRDS("data/cjsg_camaras.rds")
camaras <- readRDS("data/cjsg_camaras.rds")
camaras <- readRDS("/home/roberto/Documentos/camaras/cjsg_camaras.rds")
id_camaras <- camaras %>%
filter(str_detect(court, "Câmara.*Direito Criminal$")) %>%
pull(id)
View(camaras)
peek_cjsg(query = "", courts = id_camaras,
registration_start = "2014-01-01", registration_end = "2014-12-31")
cjsg_path <- glue("{path}/cjsg2014")
download_cjsg(query = "", path = cjsg_path,
courts = id_camaras,
registration_start = "2014-01-01",
registration_end = "2018-12-31",
max_page = Inf, wait = 0.8)
cjsg_path <- glue("{path}/cjsg2014")
download_cjsg(query = "", path = cjsg_path,
courts = id_camaras,
registration_start = "2014-01-01",
registration_end = "2018-12-31",
min_page = 1,
max_page = Inf, wait = 0.8)
download_cjsg(query = "", path = cjsg_path,
courts = id_camaras,
registration_start = "2014-01-01",
registration_end = "2018-12-31",
max_page = Inf, wait = 0.8)
View(d_cjsg)
View(d_decisoes)
cjsg_path <- glue("{path}/cjsg2014")
download_cjsg(query = "", path = cjsg_path,
courts = id_camaras,
registration_start = "2014-01-01",
registration_end = "2018-12-31",
max_page = Inf, wait = 0.8)
cjsg_path <- glue("{path}/cjsg2014")
download_cjsg(min_page = 134618,
query = "", path = cjsg_path,
courts = id_camaras,
registration_start = "2014-01-01",
registration_end = "2018-12-31",
max_page = Inf, wait = 0.8)
cjsg_path <- glue("{path}/cjsg2014")
download_cjsg(min_page = 134619,
query = "", path = cjsg_path,
courts = id_camaras,
registration_start = "2014-01-01",
registration_end = "2018-12-31",
max_page = Inf, wait = 0.8)
cjsg_path <- glue("{path}/cjsg2014")
download_cjsg(query = "", path = cjsg_path,
courts = id_camaras,
registration_start = "2014-01-01",
registration_end = "2018-12-31",
max_page = 134618, wait = 0.8)
install.packages('googleVis')
library(googleVis)
m = gvisMotionChart(Fruits, "Fruit", "Year")
m
plot(m)
m$html$chart
cat(m$html$chart, file="tmp.html")
m$html$header
cat(m$html$header, file = "header.html")
Bubble <- gvisBubbleChart(Fruits, idvar="Fruit",
xvar="Sales", yvar="Expenses",
colorvar="Year", sizevar="Profit",
options=list(
hAxis='{minValue:75, maxValue:125}'))
plot(Bubble)
Bubble$html$chart
cat(Bubble$html$chart, file = "bubble.html")
clear
clean
clearPushBack()
library(googleVis)
demo(googleVis)
library(googleVis)
df = data.frame(country=c("US", "GB", "BR"),
val1=c(10,13,14),
val2=c(23,12,32))
View(df)
Line = gvisLineChart(df)
plot(Line)
Column <- gvisColumnChart(df)
plot(Column)
Line = gvisLineChart(df)
plot(Line)
Column <- gvisColumnChart(df)
plot(Column)
Line = gvisLineChart(df)
Column = gvisColumnChart(df)
plot(Line, Column)
Line = gvisLineChart(df)
Column = gvisColumnChart(df)
plot(c(Line, Column))
Line = gvisLineChart(df)
Column = gvisColumnChart(df)
plots = gvisMerge(Line, Column)
Line = gvisLineChart(df)
Column = gvisColumnChart(df)
plots = gvisMerge(Line, Column)
plot(plots)
cat(plots, file = "teste.html")
Line = gvisLineChart(df)
Column = gvisColumnChart(df)
plots = gvisMerge(Line, Column)
x = plot(plots)
x
cat(x, file = "teste.html")
cat(x, file = "teste.html")
cat(gvisMerge(Line, Column), file = "teste.html")
getwd()
setwd("/home/rfuzi/Documentos/Projetos/Kaggle/Titanic")
getwd()
setwd("/home/roberto/Documentos/git/R")
install.packages("funModeling")
install.packages("Amelia", lib = "~/myrlibrary")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("reshape")
install.packages("randomForest")
install.packages("readxl")
install.packages("e1071") # Naive Bayes
install.packages("tidyr")
install.packages("ggthemes")
install.packages("rpart")
